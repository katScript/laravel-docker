#!/bin/bash
GIT=""
BRANCH=""
DATABASE=""
ENV_FILE=""
BASE_URL=""
VERSION=""

green=$(tput setaf 2)
blue=$(tput setaf 4)
normal=$(tput sgr0)

#URL, GIT, BRANCH ,DATABASE
read -p "GIT URL (git src code): " -e -i "git@github.com:katScript/laravel.git" GIT
read -p "GIT Branch: " -e -i "master" BRANCH
read -p "DATABASE (you can leave it empty to skip the sql import): " -e -i "mysql/file_name.sql" DATABASE
read -p "ENV File: " -e -i "env/.env" ENV_FILE
read -p "BASE_URL: " -e -i "localhost" BASE_URL

if [ -n "$GIT" ] && [ -n "$BRANCH" ] && [ -n "$ENV_FILE" ] && [ -n "$BASE_URL" ];
then
    echo "Removing src & creating empty src folder..."
    rm -rf src
    mkdir -p src

    echo "Restart containers to mount files..."
    bin/restart
    sleep 5

    if [ -z "$DATABASE" ]
    then
      echo "${blue}Skip database import...${normal}"
    else
      echo "${green}Import database...${normal}"
      bin/mysql-import $DATABASE
    fi

    exec < /dev/tty
    echo
    read -p "${green}Enter Laravel version: ${normal}" -e -i "8.0" VERSION
    exec <&-

    echo
    echo "Installing laravel via composer..."
    bin/clinotty composer create-project --prefer-dist laravel/laravel:^$VERSION .
    VERSION=''

    bin/clinotty chmod u+x artisan

    echo "${green}Copy .env file...${normal}"
    cp $ENV_FILE src/.env

    echo "${green}Generating laravel app key...${normal}"
    bin/clinotty php artisan key:generate --ansi

    echo "${green}Pull the code & switch the branch...${normal}"
    bin/git-init $GIT $BRANCH

    echo "${green}Copying all files from host to container...${normal}"
    bin/copytocontainer --all

    echo "Checking composer..."

    echo "Forcing reinstall of composer deps to ensure perms & reqs..."
    bin/clinotty composer global require hirak/prestissimo
    bin/clinotty composer install

    echo "Copying files from container to host after install..."
    bin/copyfromcontainer app
    bin/copyfromcontainer vendor

    echo "Create a DNS host entry for the site..."
    echo "127.0.0.1 ::1 $BASE_URL" | sudo tee -a /etc/hosts

    echo "Generating SSL certificate..."
    bin/setup-ssl $BASE_URL

    echo "${green}Docker development environment setup complete.${normal}"
    echo "You may now access your project at ${green}https://${BASE_URL}/${normal}"
else
    echo "All fields above are required to setup, please fill..."
fi